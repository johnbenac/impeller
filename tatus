warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'auto_runner.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'config.yaml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'impeller_sim.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'plot_results.py', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/README.md b/README.md[m
[1mindex 6b3dfa6..ea3e478 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,6 +1,6 @@[m
 # Impeller Fluid Flow Simulator and Optimizer[m
 [m
[31m-A comprehensive tool for simulating, optimizing, and visualizing fluid flow through parameterized impellers. This project combines advanced fluid dynamics simulation with interactive visualization tools to help engineers and researchers optimize impeller designs.[m
[32m+[m[32mA comprehensive tool for simulating, optimizing, and visualizing fluid flow through parameterized impellers. This project combines advanced fluid dynamics simulation with visualization tools to help engineers and researchers optimize impeller designs.[m
 [m
 ## Features[m
 - **Parameterized Impeller Design**[m
[36m@@ -14,10 +14,10 @@[m [mA comprehensive tool for simulating, optimizing, and visualizing fluid flow thro[m
   - Convergence monitoring[m
 [m
 - **Rich Visualization Suite**[m
[31m-  - Interactive performance dashboards[m
[31m-  - Real-time flow visualization[m
[31m-  - Comprehensive performance plots and heatmaps[m
[31m-  - Efficiency analysis tools[m
[32m+[m[32m  - Performance maps with efficiency contours[m
[32m+[m[32m  - Blade loading analysis[m
[32m+[m[32m  - Flow field visualization[m
[32m+[m[32m  - Optimization progress tracking[m
 [m
 ## Installation[m
 [m
[36m@@ -45,71 +45,76 @@[m [mpip install -r requirements.txt[m
 [m
 ## Usage[m
 [m
[31m-### Running the Application[m
[31m-1. Start the interactive application:[m
[31m-```bash[m
[31m-streamlit run app.py[m
[31m-```[m
[31m-[m
[31m-2. Access the web interface at `http://localhost:8501`[m
[31m-[m
[31m-### Running Simulations[m
[32m+[m[32m### Running Simulations and Generating Visualizations[m
 1. Configure simulation parameters in `config.yaml`[m
[31m-2. Run automated simulations:[m
[32m+[m[32m2. Run the automated optimization and visualization:[m
 ```bash[m
 python auto_runner.py[m
 ```[m
 [m
[31m-3. Generate visualization results:[m
[31m-```bash[m
[31m-python plot_results.py[m
[31m-```[m
[32m+[m[32mThis will:[m
[32m+[m[32m- Run all configured test cases[m
[32m+[m[32m- Optimize impeller parameters[m
[32m+[m[32m- Generate comprehensive performance visualizations[m
 [m
[31m-## Visualization Suite[m
[31m-[m
[31m-### Available Visualizations[m
[31m-[m
[31m-1. **Efficiency vs Flow Rate Plot**[m
[31m-   ![Efficiency vs Flow Rate](results/efficiency_flow_plot.png)[m
[31m-   - Performance mapping across flow rates[m
[31m-   - Color-coded test case categories[m
[31m-   - Trend analysis with efficiency patterns[m
[32m+[m[32mAll results and visualizations will be saved in the `results` directory.[m
 [m
[31m-2. **Convergence Analysis**[m
[31m-   ![Convergence Plot](results/convergence_plot.png)[m
[31m-   - Optimization convergence tracking[m
[31m-   - Per-case improvement visualization[m
[31m-   - Iteration performance metrics[m
[31m-[m
[31m-3. **Performance Heatmap**[m
[31m-   ![Performance Heatmap](results/performance_heatmap.png)[m
[31m-   - 2D density visualization of performance[m
[31m-   - Optimal operating region identification[m
[31m-   - Test point distribution mapping[m
[32m+[m[32m## Visualization Suite[m
 [m
[31m-4. **Interactive Dashboard** (`results/interactive_analysis.html`)[m
[31m-   - Dynamic data exploration[m
[31m-   - Real-time filtering and analysis[m
[31m-   - Comprehensive performance metrics[m
[31m-   - Custom view exports[m
[32m+[m[32m### 1. Performance Map[m
[32m+[m[32m![Performance Map](results/performance_map.png)[m
[32m+[m[32m- Dimensionless performance characteristics (Ïˆ-Ï† diagram)[m
[32m+[m[32m- Efficiency contours showing optimal operating regions[m
[32m+[m[32m- Operating points with efficiency values[m
[32m+[m[32m- Best Efficiency Point (BEP) marker[m
[32m+[m
[32m+[m[32m### 2. Blade Loading Analysis[m
[32m+[m[32m![Blade Loading](results/blade_loading.png)[m
[32m+[m[32m- Pressure distribution along blade surfaces[m
[32m+[m[32m- Velocity profiles at key meridional positions[m
[32m+[m[32m- Comparison between pressure and suction sides[m
[32m+[m[32m- Flow separation and loading indicators[m
[32m+[m
[32m+[m[32m### 3. Optimization Progress[m
[32m+[m[32m![Optimization Progress](results/optimization_progress.png)[m
[32m+[m[32m- Evolution of design parameters during optimization[m
[32m+[m[32m- Convergence of objective function[m
[32m+[m[32m- Efficiency improvements over iterations[m
[32m+[m[32m- Parameter sensitivity analysis[m
[32m+[m
[32m+[m[32m### 4. Interactive Analysis Dashboard[m
[32m+[m[32mThe interactive dashboard (`results/interactive_analysis.html`) provides:[m
[32m+[m[32m- Dynamic performance map exploration[m
[32m+[m[32m- Real-time parameter correlation analysis[m
[32m+[m[32m- Blade loading animations[m
[32m+[m[32m- Velocity triangle visualizations[m
 [m
 ## Performance Metrics[m
 [m
 ### Key Indicators[m
[31m-- Maximum Efficiency: 73.0%[m
[31m-- Operating Range: 5-40 m/s[m
[31m-- Optimal Flow Range: 15-30 m/s[m
[32m+[m[32m- Maximum Efficiency: 84.4%[m
[32m+[m[32m- Operating Range: 0.05-0.15 mÂ³/s[m
[32m+[m[32m- Optimal Flow Coefficient: 0.1-0.12[m
 [m
 ### Operating Recommendations[m
[31m-1. **Optimal Operation**: 15-30 m/s flow rate[m
[31m-2. **Caution Zones**: [m
[31m-   - Below 10 m/s: Requires careful monitoring[m
[31m-   - At 35 m/s: Known efficiency drop[m
[31m-3. **Recovery Zone**: 40 m/s shows stable operation[m
[32m+[m[32m1. **Best Efficiency Point**:[m[41m [m
[32m+[m[32m   - Flow Coefficient (Ï†): 0.11[m
[32m+[m[32m   - Head Coefficient (Ïˆ): 0.32[m
[32m+[m[32m   - Efficiency: 84.4%[m
[32m+[m
[32m+[m[32m2. **Operating Ranges**:[m[41m [m
[32m+[m[32m   - Normal Operation: Ï† = 0.08-0.14[m
[32m+[m[32m   - Extended Operation: Ï† = 0.05-0.15[m
[32m+[m[32m   - Avoid: Ï† > 0.15 (high flow instability)[m
[32m+[m
[32m+[m[32m3. **Design Parameters at BEP**:[m
[32m+[m[32m   - Number of Blades: 4[m
[32m+[m[32m   - Inlet Angle: 10.0Â°[m
[32m+[m[32m   - Outlet Angle: 38.4Â°[m
[32m+[m[32m   - Rotational Speed: 3000 RPM[m
 [m
 ## Project Structure[m
 ```[m
[31m-â”œâ”€â”€ app.py                 # Interactive web application[m
 â”œâ”€â”€ auto_runner.py         # Automated simulation runner[m
 â”œâ”€â”€ config.yaml           # Configuration parameters[m
 â”œâ”€â”€ impeller_sim.py       # Core simulation logic[m
[1mdiff --git a/app.py b/app.py[m
[1mdeleted file mode 100644[m
[1mindex 8d2db29..0000000[m
[1m--- a/app.py[m
[1m+++ /dev/null[m
[36m@@ -1,176 +0,0 @@[m
[31m-import streamlit as st[m
[31m-import matplotlib.pyplot as plt[m
[31m-from impeller_sim import ImpellerParams, ImpellerSimulation[m
[31m-from auto_runner import AutomatedRunner[m
[31m-import numpy as np[m
[31m-import plotly.graph_objects as go[m
[31m-from plotly.subplots import make_subplots[m
[31m-import json[m
[31m-import os[m
[31m-from datetime import datetime[m
[31m-[m
[31m-st.set_page_config(page_title="Impeller Flow Simulator", layout="wide")[m
[31m-[m
[31m-st.title("Impeller Flow Simulator")[m
[31m-st.markdown("""[m
[31m-This advanced simulator provides real-time visualization and optimization of fluid flow through a parameterized impeller.[m
[31m-The simulation includes physical constraints, automated parameter optimization, and comprehensive performance metrics.[m
[31m-""")[m
